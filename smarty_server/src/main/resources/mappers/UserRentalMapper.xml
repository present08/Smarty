<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.smarty.mapper.UserRentalMapper">
    <!-- 대여 등록 -->
    <insert id="insertRental" parameterType="com.green.smarty.vo.RentalVO">
        INSERT INTO rental (
            rental_id,
            user_id,
            product_id,
            payment_id,
            rental_status,
            rental_date,
            count
        ) VALUES (
            #{rental_id},
            #{user_id},
            #{product_id},
            #{payment_id},
            #{rental_status},
            #{rental_date},
            #{count}
        )
    </insert>

    <!-- 모든 대여 조회 -->
    <select id="getAllRentals" resultType="com.green.smarty.dto.RentalDTO">
        SELECT
        rental_id,
        user_id,
        product_id,
        rental_status,
        rental_date,
        return_date,
        count
        FROM
        rental;
    </select>

    <!-- 특정 대여 조회 -->
    <select id="getRentalById" parameterType="String" resultType="com.green.smarty.dto.RentalDTO">
        SELECT
        rental_id,
        user_id,
        product_id,
        rental_status,
        rental_date,
        return_date,
        count
        FROM
        rental
        WHERE
        rental_id = #{rental_id};
    </select>

    <!-- 대여 가능한 status_id 조회 -->
    <select id="getAvailableStatusIds" parameterType="map" resultType="string">
        SELECT status_id
        FROM product_status
        WHERE product_id = #{product_id} AND current_status = TRUE
        LIMIT #{count};
    </select>

    <!-- 대여 상태 변경 -->
    <update id="updateChangedStatus" parameterType="map">
        UPDATE product_status
        SET current_status = FALSE, updated_at = CURRENT_TIMESTAMP
        WHERE status_id = #{status_id};
    </update>

    <!-- 대여 가능한 재고 확인 -->
    <select id="getAvailableStock" parameterType="string" resultType="int">
        SELECT
        p.stock -
        IFNULL((
        SELECT SUM(psl.change_quantity)
        FROM product_status_log psl
        INNER JOIN product_status ps ON ps.status_id = psl.status_id
        WHERE ps.product_id = #{product_id}
        ), 0) AS available_stock
        FROM
        product p
        WHERE
        p.product_id = #{product_id};
    </select>



    <!-- 대여 로그 추가 -->
    <insert id="insertRentalLogWithRentalId" parameterType="map">
        INSERT INTO product_status_log (
        rental_id,
        status_id,
        product_id,
        changed_status,
        change_quantity,
        created_at
        ) VALUES (
        #{rental_id},
        #{status_id},
        #{product_id},
        #{changed_status},
        #{change_quantity},
        CURRENT_TIMESTAMP
        );
    </insert>

    <!-- 대여 로그 삭제 -->
    <delete id="deleteRentalLog" parameterType="map">
        DELETE FROM product_status_log
        WHERE status_id = #{status_id} AND change_quantity = #{count};
    </delete>

    <!-- 대여된 상태 복구 -->
    <update id="restoreToAvailable" parameterType="string">
        UPDATE product_status
        SET current_status = TRUE, updated_at = CURRENT_TIMESTAMP
        WHERE status_id = #{status_id};
    </update>

    <!-- 특정 상품의 전체 재고 확인 -->
    <select id="getTotalStock" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM product_status
        WHERE product_id = #{product_id};
    </select>

    <!-- 특정 상품의 대여 불가량 확인 -->
    <select id="getUnavailableStock" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM product_status
        WHERE product_id = #{product_id} AND current_status = FALSE;
    </select>

    <!-- 특정 사용자 대여 목록 조회 -->
    <select id="getUserRentalListData" parameterType="String" resultType="com.green.smarty.dto.ProductRentalUserDTO">
        SELECT
        u.user_id,
        u.user_name,
        f.facility_name,
        p.product_id,
        p.product_name,
        p.price,
        p.size,
        r.rental_date,
        r.return_date,
        r.rental_status,
        r.rental_id,
        r.count
        FROM
        rental r
        INNER JOIN
        user u ON u.user_id = r.user_id
        INNER JOIN
        product p ON p.product_id = r.product_id
        INNER JOIN
        facility f ON f.facility_id = p.facility_id
        WHERE
        u.user_id = #{user_id};
    </select>

    <!-- 반납 처리 -->
    <update id="returnRental" parameterType="com.green.smarty.vo.RentalVO">
        UPDATE rental
        SET rental_status = #{rental_status},
        return_date = #{return_date}
        WHERE rental_id = #{rental_id};
    </update>

    <resultMap id="RentalVOMap" type="com.green.smarty.vo.RentalVO">
        <result property="rental_id" column="rental_id" jdbcType="VARCHAR"/>
    </resultMap>

    <update id="updatePaymentStatus" parameterType="com.green.smarty.dto.PaymentDTO">
        UPDATE payment
        SET payment_status = #{payment_status}
        WHERE payment_id = (SELECT payment_id FROM rental WHERE rental_id = #{rental_id})
    </update>

    <select id="getMaxRentalIdForDate" parameterType="string" resultType="string">
        SELECT MAX(rental_id)
        FROM rental
        WHERE rental_id LIKE CONCAT('R_', #{datePrefix}, '%')
    </select>

<!--    (영준) 알림을 위해서 추가한 코드-->
    <select id="getOverdueRentals" resultType="com.green.smarty.dto.RentalDTO">
        SELECT * FROM rental
        WHERE rental_date &lt; NOW() - INTERVAL 10 DAY
        AND rental_status = 1;
    </select>

<!--    (영준) user_id가 아니라 이메일을 가져오기 위한 코드-->
    <select id="getEmailByUserId" resultType="String" parameterType="String">
        SELECT email
        FROM user
        WHERE user_id = #{user_id}
    </select>
</mapper>