<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.smarty.mapper.product.ProductMapper">

    <insert id="insertProduct" parameterType="com.green.smarty.vo.product.ProductVO" useGeneratedKeys="true" keyProperty="product_id">
        insert into product (product_id, facility_id, product_name, management_type, price, size, stock, product_images)
        values (#{product_id}, #{facility_id}, #{product_name}, #{management_type}, #{price}, #{size}, #{stock}, #{product_images})
    </insert>

    <select id="getAllProducts" resultType="com.green.smarty.vo.product.ProductVO">
        SELECT * FROM product
    </select>

    <!-- 특정 대여물품 조회 -->
    <select id="getProductById" parameterType="String" resultType="com.green.smarty.vo.product.ProductVO">
        SELECT * FROM product WHERE product_id = #{productId};
    </select>

    <!-- 대여물품 정보 수정 -->
    <update id="modify" parameterType="com.green.smarty.vo.product.ProductVO">
        UPDATE product
        SET facility_id = #{facility_id}, product_name = #{product_name}, price = #{price}
        WHERE product_id = #{product_id};
    </update>

    <!-- 대여물품 삭제 -->
    <delete id="removeProduct" parameterType="String">
        DELETE FROM product WHERE product_id = #{product_id};
    </delete>

    <!-- 특정 시설의 모든 대여물품 -->
    <select id="getProductsByFacilityId" parameterType="string" resultType="com.green.smarty.vo.product.ProductVO">
        SELECT * FROM product WHERE facility_id = #{facilityId}
    </select>

    <!-- 중간 자리 순번 조회: product_id가 baseProductId로 시작하는 경우 중간 자리의 최대 값 조회 -->
    <select id="findMaxMiddleIndex" resultType="int">
        SELECT COALESCE(MAX(CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(product_id, '_', -2), '_', 1) AS UNSIGNED)), 0)
        FROM product
        WHERE product_id LIKE CONCAT(#{baseProductId}, '%')
    </select>

    <!-- 끝자리 순번 조회: product_id가 baseProductId로 시작하는 경우 끝자리의 최대 값 조회 -->
    <select id="findMaxSuffix" resultType="int">
        SELECT COALESCE(MAX(CAST(SUBSTRING_INDEX(product_id, '_', -1) AS UNSIGNED)), 0)
        FROM product
        WHERE product_id LIKE CONCAT(#{baseProductId}, '%')
    </select>

    <select id="existsByProductName" parameterType="map" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM product
        WHERE product_name = #{productName}
    </select>

    <select id="existsByProductId" parameterType="string" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM product
        WHERE product_id = #{productId}
    </select>
    </mapper>